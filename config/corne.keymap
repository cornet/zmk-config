/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define LOWER 1
#define RAISE 2

&sk {
  release-after-ms = <2000>;
  quick-release;
};

&mt {
  flavor = "balanced";
  quick-tap-ms = <200>;
};

/ {
    behaviours {
      mthp: mod_tap_hold_preferred {
        compatible = "zmk,behavior-hold-tap";
        #binding-cells = <2>;
        flavor = "hold-preferred";
        tapping-term-ms = <200>;
        require-prior-idle-ms = <100>;
        bindings = <&kp>, <&kp>;
      };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  TAB  |  Q  |   W   |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   #   |
// |  CAPS |  A  |   S   |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// |   \   |  Z  |   X   |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | ENTER |
//               | SHIFT | ALT  | GUI  | LOWER|  SPACE |  | SHIFT | RAISE| ALT   | ALT   | GUI  |
            bindings = <
&kp TAB         &kp Q  &kp W      &kp E       &kp R       &kp T                              &kp Y       &kp U       &kp I      &kp O      &kp P    &kp NUHS
&mthp LCTRL ESC &kp A  &mt LALT S &mt LGUI D  &mt LSHFT F &kp G                              &kp H       &mt RSHFT J &mt RGUI K &mt RALT L &kp SEMI &mt RCTL SQT
&kp NUBS        &kp Z  &kp X      &kp C       &kp V       &kp B                              &kp N       &kp M       &kp COMMA  &kp DOT    &kp FSLH &kp ENTER
                                              &kp LGUI    &mo LOWER   &kp SPACE    &kp LSHFT &mo RAISE   &kp RALT                       
            >;
        };

        lower_layer {
// ------------------------------------------------------------------------------------------------------------
// |     |      |       |       |       |        |                | HOME | PGDN  | PGUP  | END  |       |       |
// |     |      | SHIFT | ALT   |  GUI  |        |                | <-   |   v   |   ^   |  ->  |       |       |
// |     |      |       |       |       |        |      |  |      | INS  |  DEL  | PREV  | NEXT |       |       |
//       |      |       |       |       |        |      |  |      |      |       |       |      |
            bindings = <
&trans     &trans       &trans       &trans       &trans       &trans                                &kp HOME  &kp PG_DN &kp PG_UP  &kp END    &trans  &trans
&trans     &trans       &kp LSHFT    &kp LALT     &kp LGUI     &trans                                &kp LEFT  &kp DOWN  &kp UP     &kp RIGHT  &trans  &trans
&trans     &trans       &trans       &trans       &trans       &trans                                &kp INS   &kp DEL   &kp C_PREV &kp C_NEXT &trans  &trans
                                                  &trans       &trans       &trans   &trans          &trans    &trans                     
            >;
        };

        raise_layer {
// ------------------------------------------------------------------------------------------------------------
// |       |     |     |   _  |   +  |  [   |                   |  ]   |       |       |      |   :   |   @   |
// |       |     |     |      |      |  {   |        |  |       |  }   |       |   <   |   >  |   ?   |       |
//         |  |  |     |      |      |      |        |  |       |      |       |       |      |
            bindings = <
&trans       &trans    &trans     &kp EQUAL   &kp MINUS    &kp LPAR                    &kp RPAR  &trans    &trans     &trans    &trans    &kp LS(NUHS)
&trans       &trans    &trans     &kp PLUS    &kp UNDER    &kp LBKT                    &kp RBKT  &trans    &trans     &trans    &kp COLON &kp LS(SQT)
&kp LS(NUBS) &kp PIPE2 &trans     &trans      &trans       &kp LBRC                    &kp RBRC  &trans    &kp LT     &kp GT    &kp QMARK &trans
                                              &trans       &trans    &trans   &trans   &trans    &trans                     
            >;
        };

    };
};
