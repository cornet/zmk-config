/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define LOWER 1
#define RAISE 2

&sk {
  release-after-ms = <2000>;
  quick-release;
};

/ {
    behaviours {
      mlt: my-layer-tap {
        compatible = "zmk,behavior-hold-tap";
        label = "MY_LAYER_TAP";
        #binding-cells = <2>;
        flavor = "balanced";
        tapping-term-ms = <200>;
        bindings = <&mo>, <&kp>;
      };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  `    |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   | BKSPC |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   #   |
// |  CAPS |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// |   \   |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | ENTER |
//               | FN  | ALT  | GUI  | LOWER|  SPACE |  | SHIFT | RAISE| ALT   | ALT   | GUI  |
            bindings = <
&kp GRAVE       &kp N1 &kp N2    &kp N3   &kp N4    &kp N5                             &kp N6    &kp N7   &kp N8    &kp N9   &kp N0   &kp BSPC
&kp TAB         &kp Q  &kp W     &kp E    &kp R     &kp T                              &kp Y     &kp U    &kp I     &kp O    &kp P    &kp NUHS
&mt LCTRL ESC   &kp A  &kp S     &kp D    &kp F     &kp G                              &kp H     &kp J    &kp K     &kp L    &kp SEMI &kp SQT
&kp NUBS        &kp Z  &kp X     &kp C    &kp V     &kp B       &kp C_MUTE   &none     &kp N     &kp M    &kp COMMA &kp DOT  &kp FSLH &kp ENTER
                       &kp LSHFT &kp LALT &kp LGUI  &sl LOWER   &kp SPACE    &kp LSHFT &sl RAISE &kp RALT &kp RALT &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {
// ------------------------------------------------------------------------------------------------------------
// |BTCLR| BT1  | BT2   |  BT3  |  BT4  |  BT5   |                |      |       |       |      |       |  DEL  |
// |     |      |       |       |       |        |                | HOME | PGDN  | PGUP  | END  |       |       |
// |     |      | SHIFT | ALT   |  GUI  |        |                | <-   |   v   |   ^   |  ->  |       | ENTER |
// |     |      |       |       |       |        |      |  |      | INS  |  DEL  | PREV  | NEXT |       |       |
//       |      |       |       |       |        |      |  |      |      |       |       |      |
            bindings = <
&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                  &trans    &trans    &trans     &trans     &trans  &kp DEL
&trans     &trans       &trans       &trans       &trans       &trans                        &kp HOME  &kp PG_DN &kp PG_UP  &kp END    &trans  &trans
&trans     &trans       &kp LSHFT    &kp LALT     &kp LGUI     &trans                        &kp LEFT  &kp DOWN  &kp UP     &kp RIGHT  &trans  &trans
&trans     &trans       &trans       &trans       &trans       &trans       &trans   &trans  &kp INS   &kp DEL   &kp C_PREV &kp C_NEXT &trans  &trans
                        &trans       &trans       &trans       &trans       &trans   &trans  &trans    &trans    &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
// TODO: Some binds are waiting for shifted keycode support.
// ------------------------------------------------------------------------------------------------------------
// |       |  !  |  "  |   Â£  |   $  |  %   |                   |  ^   |  &    |   *   |   (  |   )   |       |
// |       |     |     |   -  |   =  |  (   |                   |  )   |       |       |      |       |   ~   |
// |       |     |     |   _  |   +  |  [   |                   |  ]   |       |       |      |   :   |   @   |
// |       |     |     |      |      |  {   |        |  |       |  }   |       |   <   |   >  |   ?   |       |
//         |  |  |     |      |      |      |        |  |       |      |       |       |      |
            bindings = <
&trans       &kp EXCL  &kp LS(N2) &kp POUND   &kp DLLR     &kp PRCNT                   &kp CARET &kp AMPS  &kp ASTRK  &kp LPAR  &kp RPAR  &trans
&trans       &trans    &trans     &kp EQUAL   &kp MINUS    &kp LPAR                    &kp RPAR  &trans    &trans     &trans    &trans    &kp LS(NUHS)
&trans       &trans    &trans     &kp PLUS    &kp UNDER    &kp LBKT                    &kp RBKT  &trans    &trans     &trans    &kp COLON &kp AT
&kp LS(NUBS) &kp PIPE2 &trans     &trans      &trans       &kp LBRC  &trans   &trans   &kp RBRC  &trans    &kp LT     &kp GT    &kp QMARK &trans
                    &trans     &trans      &trans       &trans    &trans   &trans   &trans    &trans    &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_UP PG_DN>;
        };

    };
}; 
